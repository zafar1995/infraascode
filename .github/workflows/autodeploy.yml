# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Azure Login
        uses: Azure/login@v2.2.0
        with:
        # Paste output of `az ad sp create-for-rbac` as value of secret variable: AZURE_CREDENTIALS
          creds: ${{ secrets.GitHubActionServiceConnection }}
      
      - name: Deploy Azure Resource Manager (ARM) Template
        uses: Azure/arm-deploy@v2
        with:
          # Provide the scope of the deployment. Valid values are: 'resourcegroup', 'tenant', 'managementgroup', 'subscription'
          scope: resourcegroup
          # Override the Subscription Id set by Azure Login.
          subscriptionId: aa3f7ecc-5b46-439d-86a3-55b9aba2d546
          # Specify the Id for the Management Group, only required for Management Group Deployments.
          
          # Provide the name of a resource group, only required for resource Group deployments.
          resourceGroupName: MyResourceGroup 
          # Specify the path or URL to the Azure Resource Manager template.
          template: ./Template.json
          # Incremental (only add resources to resource group) or Complete (remove extra resources from resource group) or Validate (only validates the template).
          deploymentMode: Incremental
          # Specifies the name of the resource group deployment to create.
          deploymentName: GithubDeployment
          # Supply deployment parameter values.
          parameters: env=true

          
      
      


